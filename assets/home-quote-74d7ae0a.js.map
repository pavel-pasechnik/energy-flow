{"version":3,"file":"home-quote-74d7ae0a.js","sources":["../../src/js/home-quote.js"],"sourcesContent":["//imports\nimport { getRequest } from './api-energy-flow';\n\n//variables\nconst phraseBlock = document.querySelector('.home-quote-phrase-text');\nconst authorBlock = document.querySelector('.home-quote-phrase-author');\nconst localStorage = window.localStorage;\nconst quoteModel = localStorage.getItem('quote');\n\n//set default values\nphraseBlock.innerHTML = 'Loading...';\nauthorBlock.innerHTML = 'Loading...';\n\n//get quote\nrenderQuote(quoteModel);\n\nfunction renderQuote(quoteModel) {\n    //get current format date\n    const formatNowDate = getFormattedDate();\n    //check if quoteModel is not null\n    if (quoteModel !== null) {\n        //parse quoteModel\n        const { author, quote, lastSaveDate } = JSON.parse(quoteModel);\n        //check if lastSaveDate is equal to current date\n        if (lastSaveDate === formatNowDate) { \n            //set quote and author\n            phraseBlock.innerHTML = quote;\n            authorBlock.innerHTML = author;\n        } else {\n            //get new quote\n            getQuoteAndUpdate();\n        }\n    } else {\n        //get new quote\n        getQuoteAndUpdate();\n    }\n}\n\nfunction getQuoteAndUpdate() { \n    //get current format date\n    const formatNowDate = getFormattedDate();\n    //get new quote from server\n    getRequest('/quote').then(data => { \n                //parse data\n        const { quote, author } = data;\n                //create quoteModel\n                const quoteModel = {\n                    quote: quote,\n                    author: author,\n                    lastSaveDate: formatNowDate,\n                };\n                //set quoteModel to localStorage\n        localStorage.setItem('quote', JSON.stringify(quoteModel));\n                //set quote and author\n                phraseBlock.innerHTML = quoteModel.quote;\n                authorBlock.innerHTML = quoteModel.author;\n            });\n}\n\nfunction getFormattedDate() {\n    const date = new Date();\n    const day = date.getDate();\n    const month = date.getMonth().toString().length === 1 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n    const year = date.getFullYear();\n    const nowDate = `${day}.${month}.${year}`;\n    return nowDate;\n}"],"names":["phraseBlock","authorBlock","localStorage","quoteModel","renderQuote","formatNowDate","getFormattedDate","author","quote","lastSaveDate","getQuoteAndUpdate","getRequest","data","date","day","month","year"],"mappings":"wFAIA,MAAMA,EAAc,SAAS,cAAc,yBAAyB,EAC9DC,EAAc,SAAS,cAAc,2BAA2B,EAChEC,EAAe,OAAO,aACtBC,EAAaD,EAAa,QAAQ,OAAO,EAG/CF,EAAY,UAAY,aACxBC,EAAY,UAAY,aAGxBG,EAAYD,CAAU,EAEtB,SAASC,EAAYD,EAAY,CAE7B,MAAME,EAAgBC,IAEtB,GAAIH,IAAe,KAAM,CAErB,KAAM,CAAE,OAAAI,EAAQ,MAAAC,EAAO,aAAAC,CAAc,EAAG,KAAK,MAAMN,CAAU,EAEzDM,IAAiBJ,GAEjBL,EAAY,UAAYQ,EACxBP,EAAY,UAAYM,GAGxBG,GAEZ,MAEQA,GAER,CAEA,SAASA,GAAoB,CAEzB,MAAML,EAAgBC,IAEtBK,EAAW,QAAQ,EAAE,KAAKC,GAAQ,CAE9B,KAAM,CAAE,MAAAJ,EAAO,OAAAD,CAAQ,EAAGK,EAEZT,EAAa,CACf,MAAOK,EACP,OAAQD,EACR,aAAcF,CAClC,EAEQH,EAAa,QAAQ,QAAS,KAAK,UAAUC,CAAU,CAAC,EAEhDH,EAAY,UAAYG,EAAW,MACnCF,EAAY,UAAYE,EAAW,MACnD,CAAa,CACb,CAEA,SAASG,GAAmB,CACxB,MAAMO,EAAO,IAAI,KACXC,EAAMD,EAAK,UACXE,EAAQF,EAAK,SAAQ,EAAG,SAAU,EAAC,SAAW,EAAI,IAAIA,EAAK,SAAQ,EAAK,CAAC,GAAKA,EAAK,SAAU,EAAG,EAChGG,EAAOH,EAAK,cAElB,MADgB,GAAGC,CAAG,IAAIC,CAAK,IAAIC,CAAI,EAE3C"}