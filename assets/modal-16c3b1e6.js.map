{"version":3,"file":"modal-16c3b1e6.js","sources":["../../src/js/modal.js"],"sourcesContent":["import { getRequest } from './api-energy-flow';\n\n// Added event listener for the start button in the exercise gallery\ndocument.addEventListener('click', event => {\n  if (event.target.classList.contains('exercises-gallery-btn-start')) {\n    const exerciseId = event.target.dataset.action;\n    showExerciseModal(exerciseId);\n  }\n});\n\n// Function to call the API and display the modal window with exercise data\nfunction showExerciseModal(exerciseId) {\n  getRequest(`/exercises/${exerciseId}`).then(data => {\n    fillModalWithData(data);\n  });\n}\n\n// Function to fill the modal window with data\nfunction fillModalWithData(data) {\n  const modal = document.getElementById('exerciseModal');\n  const modalContent = document.getElementById('exerciseDetails');\n\n  modalContent.innerHTML = '';\n\n  // Creating a DOM element for the modal window\n  const exerciseDetails = document.createElement('div');\n  exerciseDetails.innerHTML = `\n    <div class=\"exercise-details\">\n      <button id=\"closeButton\" class=\"close-button\">\n        <img src=\"./img/close.svg\" alt=\"Close Icon\">\n      </button>\n      <div class=\"content-wrapper\">\n        <div class=\"left-section\">\n          <div class=\"exercise-image\">\n            <img src=\"${data.gifUrl}\" alt=\"${data.name}\" />\n          </div>\n        </div>\n        <div class=\"right-section\">\n          <div class=\"exercise-info\">\n            <div class=\"details\">\n              <h2 class=\"exercise-name\">${data.name}</h2>\n              <div class=\"star-container\">\n                <span class=\"rating-value\">${formatRating(data.rating)}</span>\n                <div class=\"star-rating\">${getStarRating(data.rating)}</div>\n              </div>\n              <div class=\"info-block\">\n                <hr class=\"section-divider-top\">\n                <p class=\"info-item\"><span class=\"info-label\">Target:</span> ${data.target}</p>\n                <p class=\"info-item\"><span class=\"info-label\">Body Part:</span> ${data.bodyPart}</p>\n                <p class=\"info-item\"><span class=\"info-label\">Equipment:</span> ${data.equipment}</p>\n                <p class=\"info-item\"><span class=\"info-label\">Popularity:</span> ${data.popularity}</p>\n                <p class=\"info-item\"><span class=\"info-label\">Burned calories:</span> ${data.burnedCalories}/${data.time} min</p>\n                <hr class=\"section-divider-bottom\">\n              </div>\n              <div class=\"exercise-description\">\n                <p>${data.description}</p>\n              </div>\n              <div class=\"action-buttons\">\n                <button class=\"favorite-button\" id=\"favoriteButton\">\n                  <span>Add to Favorites</span>\n                  <img src=\"./img/heart.svg\" alt=\"Favorite Icon\">\n                </button>\n                <button class=\"rating-button rate-button\">Give a Rating</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>`;\n\n  modalContent.appendChild(exerciseDetails);\n  modal.classList.add('is-visible');\n\n  const favoriteButton = document.getElementById('favoriteButton');\n\n  // Checking if the exercise is already in favorites\n  if (isExerciseFavorite(data._id)) {\n    setRemoveFromFavorites(favoriteButton);\n  }\n\n  // Adding event listener for the \"Favorite\" button\n  favoriteButton.addEventListener('click', () => {\n    if (isExerciseFavorite(data._id)) {\n      removeFromFavorites(data._id);\n      setAddToFavorites(favoriteButton);\n    } else {\n      addToFavorites(data._id);\n      setRemoveFromFavorites(favoriteButton);\n    }\n  });\n\n  const modalContainer = document.getElementById('exerciseModal');\n\n  // Adding event listener for the modal window container\n  modalContainer.addEventListener('click', (event) => {\n    if (event.target === modalContainer || event.target.closest('#closeButton')) {\n      closeExerciseModal();\n    }\n  });\n}\n\n// Function to format rating with one decimal place\nfunction formatRating(rating) {\n  return isNaN(rating) ? 'N/A' : Math.round(rating).toFixed(1);\n}\n\n// Function to get star rating\nfunction getStarRating(rating) {\n  const filledStars = Math.round(rating);\n  const emptyStars = 5 - filledStars;\n  const filledStarSvg = '<img src=\"./img/colorstar.svg\" alt=\"Filled Star\" class=\"star\">';\n  const emptyStarSvg = '<img src=\"./img/star.svg\" alt=\"Empty Star\" class=\"star\">';\n  \n  let stars = '';\n\n  for (let i = 0; i < filledStars; i++) {\n    stars += filledStarSvg;\n  }\n\n  for (let i = 0; i < emptyStars; i++) {\n    stars += emptyStarSvg;\n  }\n\n  return stars;\n}\n\n// Function to check if the exercise is already in favorites\nfunction isExerciseFavorite(exerciseId) {\n  const favorites = getFavorites();\n  return favorites.includes(exerciseId);\n}\n\n// Function to get the list of favorite exercises from Local Storage\nfunction getFavorites() {\n  return JSON.parse(localStorage.getItem('favorites')) || [];\n}\n\n// Function to add an exercise to favorites in Local Storage\nfunction addToFavorites(exerciseId) {\n  const favorites = getFavorites();\n  favorites.push(exerciseId);\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n}\n\n// Function to remove an exercise from favorites in Local Storage\nfunction removeFromFavorites(exerciseId) {\n  const favorites = getFavorites();\n  const updatedFavorites = favorites.filter(id => id !== exerciseId);\n  localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n}\n\n// Function to set the \"Remove from Favorites\" button state\nfunction setRemoveFromFavorites(button) {\n  button.innerHTML = '<span>Remove from</span> <img src=\"./img/heart.svg\" alt=\"Favorite Icon\">';\n}\n\n// Function to set the \"Add to Favorites\" button state\nfunction setAddToFavorites(button) {\n  button.innerHTML = '<span>Add to Favorites</span> <img src=\"./img/heart.svg\" alt=\"Favorite Icon\">';\n}\n\n// Function to close the modal window\nfunction closeExerciseModal() {\n  console.log('Close button clicked');\n  const modal = document.getElementById('exerciseModal');\n  if (modal) {\n    modal.classList.remove('is-visible');\n  }\n}\n\n// Adding event listener for closing the modal window with the \"Escape\" key\ndocument.addEventListener(\"keydown\", (event) => {\n  if (event.key === \"Escape\") {\n    closeExerciseModal();\n  }\n});\n\n\n// // Варіант, що додається весь обєкт \n// import { getRequest } from './api-energy-flow';\n\n// document.addEventListener('click', event => {\n//   if (event.target.classList.contains('exercises-gallery-btn-start')) {\n//     const exerciseId = event.target.dataset.action;\n//     showExerciseModal(exerciseId);\n//   }\n// });\n\n// function showExerciseModal(exerciseId) {\n//   getRequest(`/exercises/${exerciseId}`).then(data => {\n//     fillModalWithData(data);\n//   });\n// }\n\n// function fillModalWithData(data) {\n//   const modal = document.getElementById('exerciseModal');\n//   const modalContent = document.getElementById('exerciseDetails');\n\n//   modalContent.innerHTML = '';\n\n//   const exerciseDetails = document.createElement('div');\n//   exerciseDetails.innerHTML = `\n//     <div class=\"exercise-details\">\n//       <button id=\"closeButton\" class=\"close-button\">\n//         <img src=\"./img/close.svg\" alt=\"Close Icon\">\n//       </button>\n//       <div class=\"content-wrapper\">\n//         <div class=\"left-section\">\n//           <div class=\"exercise-image\">\n//             <img src=\"${data.gifUrl}\" alt=\"${data.name}\" />\n//           </div>\n//         </div>\n//         <div class=\"right-section\">\n//           <div class=\"exercise-info\">\n//             <div class=\"details\">\n//               <h2 class=\"exercise-name\">${data.name}</h2>\n//               <div class=\"star-container\">\n//                 <span class=\"rating-value\">${formatRating(data.rating)}</span>\n//                 <div class=\"star-rating\">${getStarRating(data.rating)}</div>\n//               </div>\n//               <div class=\"info-block\">\n//                 <hr class=\"section-divider-top\">\n//                 <p class=\"info-item\"><span class=\"info-label\">Target:</span> ${data.target}</p>\n//                 <p class=\"info-item\"><span class=\"info-label\">Body Part:</span> ${data.bodyPart}</p>\n//                 <p class=\"info-item\"><span class=\"info-label\">Equipment:</span> ${data.equipment}</p>\n//                 <p class=\"info-item\"><span class=\"info-label\">Popularity:</span> ${data.popularity}</p>\n//                 <p class=\"info-item\"><span class=\"info-label\">Burned calories:</span> ${data.burnedCalories}/${data.time} min</p>\n//                 <hr class=\"section-divider-bottom\">\n//               </div>\n//               <div class=\"exercise-description\">\n//                 <p>${data.description}</p>\n//               </div>\n//               <div class=\"action-buttons\">\n//                 <button class=\"favorite-button\" id=\"favoriteButton\">\n//                   <span>Add to Favorites</span>\n//                   <img src=\"./img/heart.svg\" alt=\"Favorite Icon\">\n//                 </button>\n//                 <button class=\"rating-button rate-button\">Give a Rating</button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>`;\n\n//   modalContent.appendChild(exerciseDetails);\n//   modal.classList.add('is-visible');\n\n//   const favoriteButton = document.getElementById('favoriteButton');\n\n//   if (isExerciseFavorite(data._id)) {\n//     setRemoveFromFavorites(favoriteButton);\n//   }\n\n//   favoriteButton.addEventListener('click', () => {\n//     if (isExerciseFavorite(data._id)) {\n//       removeFromFavorites(data._id);\n//       setAddToFavorites(favoriteButton);\n//     } else {\n//       addToFavorites(data);\n//       setRemoveFromFavorites(favoriteButton);\n//     }\n//   });\n\n//   const modalContainer = document.getElementById('exerciseModal');\n\n//   modalContainer.addEventListener('click', (event) => {\n//     if (event.target === modalContainer || event.target.closest('#closeButton')) {\n//       closeExerciseModal();\n//     }\n//   });\n// }\n\n// function formatRating(rating) {\n//   return isNaN(rating) ? 'N/A' : Math.round(rating).toFixed(1);\n// }\n\n// function getStarRating(rating) {\n//   const filledStars = Math.round(rating);\n//   const emptyStars = 5 - filledStars;\n//   const filledStarSvg = '<img src=\"./img/colorstar.svg\" alt=\"Filled Star\" class=\"star\">';\n//   const emptyStarSvg = '<img src=\"./img/star.svg\" alt=\"Empty Star\" class=\"star\">';\n  \n//   let stars = '';\n\n//   for (let i = 0; i < filledStars; i++) {\n//     stars += filledStarSvg;\n//   }\n\n//   for (let i = 0; i < emptyStars; i++) {\n//     stars += emptyStarSvg;\n//   }\n\n//   return stars;\n// }\n\n// function isExerciseFavorite(exerciseId) {\n//   const favorites = getFavorites();\n//   return favorites.includes(exerciseId);\n// }\n\n// function getFavorites() {\n//   return JSON.parse(localStorage.getItem('favorites')) || [];\n// }\n\n// function addToFavorites(exerciseData) {\n//   const favorites = getFavorites();\n//   favorites.push(exerciseData);\n//   localStorage.setItem('favorites', JSON.stringify(favorites));\n// }\n\n// function removeFromFavorites(exerciseId) {\n//   const favorites = getFavorites();\n//   const updatedFavorites = favorites.filter(id => id !== exerciseId);\n//   localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n// }\n\n// function setRemoveFromFavorites(button) {\n//   button.innerHTML = '<span>Remove from</span> <img src=\"./img/heart.svg\" alt=\"Favorite Icon\">';\n// }\n\n// function setAddToFavorites(button) {\n//   button.innerHTML = '<span>Add to Favorites</span> <img src=\"./img/heart.svg\" alt=\"Favorite Icon\">';\n// }\n\n// function closeExerciseModal() {\n//   console.log('Close button clicked');\n//   const modal = document.getElementById('exerciseModal');\n//   if (modal) {\n//     modal.classList.remove('is-visible');\n//   }\n// }\n\n// document.addEventListener(\"keydown\", (event) => {\n//   if (event.key === \"Escape\") {\n//     closeExerciseModal();\n//   }\n// });\n\n\n\n\n"],"names":["event","exerciseId","showExerciseModal","getRequest","data","fillModalWithData","modal","modalContent","exerciseDetails","formatRating","getStarRating","favoriteButton","isExerciseFavorite","setRemoveFromFavorites","removeFromFavorites","setAddToFavorites","addToFavorites","modalContainer","closeExerciseModal","rating","filledStars","emptyStars","filledStarSvg","emptyStarSvg","stars","i","getFavorites","favorites","updatedFavorites","id","button"],"mappings":"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"}